{
  "contractName": "KeepBonding",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenStakingAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenGrantAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sortitionPool",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "referenceID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BondCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "referenceID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newHolder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newReferenceID",
          "type": "uint256"
        }
      ],
      "name": "BondReassigned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "referenceID",
          "type": "uint256"
        }
      ],
      "name": "BondReleased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "referenceID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "destination",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BondSeized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "UnbondedValueDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "UnbondedValueWithdrawn",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_poolAddress",
          "type": "address"
        }
      ],
      "name": "authorizeSortitionPoolContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "bondCreator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "authorizedSortitionPool",
          "type": "address"
        }
      ],
      "name": "availableUnbondedValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "referenceID",
          "type": "uint256"
        }
      ],
      "name": "bondAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "referenceID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "authorizedSortitionPool",
          "type": "address"
        }
      ],
      "name": "createBond",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_poolAddress",
          "type": "address"
        }
      ],
      "name": "deauthorizeSortitionPoolContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "referenceID",
          "type": "uint256"
        }
      ],
      "name": "freeBond",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_poolAddress",
          "type": "address"
        }
      ],
      "name": "hasSecondaryAuthorization",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "referenceID",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newHolder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "newReferenceID",
          "type": "uint256"
        }
      ],
      "name": "reassignBond",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "referenceID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "destination",
          "type": "address"
        }
      ],
      "name": "seizeBond",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "unbondedValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "managedGrant",
          "type": "address"
        }
      ],
      "name": "withdrawAsManagedGrantee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operatorContract",
          "type": "address"
        }
      ],
      "name": "isAuthorizedForOperator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "authorizerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "beneficiaryOf",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenStakingAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenGrantAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sortitionPool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"referenceID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BondCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"referenceID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newHolder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newReferenceID\",\"type\":\"uint256\"}],\"name\":\"BondReassigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"referenceID\",\"type\":\"uint256\"}],\"name\":\"BondReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"referenceID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BondSeized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UnbondedValueDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UnbondedValueWithdrawn\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_poolAddress\",\"type\":\"address\"}],\"name\":\"authorizeSortitionPoolContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"authorizerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"bondCreator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"authorizedSortitionPool\",\"type\":\"address\"}],\"name\":\"availableUnbondedValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"beneficiaryOf\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"referenceID\",\"type\":\"uint256\"}],\"name\":\"bondAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"referenceID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"authorizedSortitionPool\",\"type\":\"address\"}],\"name\":\"createBond\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_poolAddress\",\"type\":\"address\"}],\"name\":\"deauthorizeSortitionPoolContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"referenceID\",\"type\":\"uint256\"}],\"name\":\"freeBond\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_poolAddress\",\"type\":\"address\"}],\"name\":\"hasSecondaryAuthorization\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operatorContract\",\"type\":\"address\"}],\"name\":\"isAuthorizedForOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"referenceID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newHolder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newReferenceID\",\"type\":\"uint256\"}],\"name\":\"reassignBond\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"referenceID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"seizeBond\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"unbondedValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"managedGrant\",\"type\":\"address\"}],\"name\":\"withdrawAsManagedGrantee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"authorizeSortitionPoolContract(address,address)\":{\"details\":\"Only operator's authorizer can call this function.\"},\"availableUnbondedValue(address,address,address)\":{\"details\":\"Implements function expected by sortition pools' IBonding interface.\",\"params\":{\"authorizedSortitionPool\":\"Address of authorized sortition pool.\",\"bondCreator\":\"Address authorized to create a bond.\",\"operator\":\"Address of the operator.\"},\"return\":\"Amount of authorized wei deposit available for bonding.\"},\"bondAmount(address,address,uint256)\":{\"params\":{\"holder\":\"Address of the holder of the bond.\",\"operator\":\"Address of the operator.\",\"referenceID\":\"Reference ID of the bond.\"},\"return\":\"Amount of wei in the selected bond.\"},\"constructor\":{\"params\":{\"registryAddress\":\"Keep registry contract address.\",\"tokenGrantAddress\":\"KEEP token grant contract address.\",\"tokenStakingAddress\":\"KEEP token staking contract address.\"}},\"createBond(address,address,uint256,uint256,address)\":{\"details\":\"Function can be executed only by authorized contract. Reference ID should be unique for holder and operator.\",\"params\":{\"amount\":\"Value to bond in wei.\",\"authorizedSortitionPool\":\"Address of authorized sortition pool.\",\"holder\":\"Address of the holder of the bond.\",\"operator\":\"Address of the operator to bond.\",\"referenceID\":\"Reference ID used to track the bond by holder.\"}},\"deauthorizeSortitionPoolContract(address,address)\":{\"details\":\"Only operator's authorizer can call this function.\"},\"deposit(address)\":{\"params\":{\"operator\":\"Address of the operator.\"}},\"freeBond(address,uint256)\":{\"details\":\"Function requires that caller is the holder of the bond which is being released.\",\"params\":{\"operator\":\"Address of the bonded operator.\",\"referenceID\":\"Reference ID of the bond.\"}},\"hasSecondaryAuthorization(address,address)\":{\"details\":\"See authorizeSortitionPoolContract.\"},\"reassignBond(address,uint256,address,uint256)\":{\"details\":\"Function requires that a caller is the current holder of the bond which is being reassigned.\",\"params\":{\"newHolder\":\"Address of the new holder of the bond.\",\"newReferenceID\":\"New reference ID to register the bond.\",\"operator\":\"Address of the bonded operator.\",\"referenceID\":\"Reference ID of the bond.\"}},\"seizeBond(address,uint256,uint256,address)\":{\"details\":\"Function requires that a caller is the holder of the bond which is being seized.\",\"params\":{\"amount\":\"Amount to be seized.\",\"destination\":\"Address to send the amount to.\",\"operator\":\"Address of the bonded operator.\",\"referenceID\":\"Reference ID of the bond.\"}},\"withdraw(uint256,address)\":{\"params\":{\"amount\":\"Value to withdraw in wei.\",\"operator\":\"Address of the operator.\"}},\"withdrawAsManagedGrantee(uint256,address,address)\":{\"params\":{\"amount\":\"Value to withdraw in wei.\",\"managedGrant\":\"Address of the managed grant contract.\",\"operator\":\"Address of the operator.\"}}},\"title\":\"Keep Bonding\"},\"userdoc\":{\"methods\":{\"authorizeSortitionPoolContract(address,address)\":{\"notice\":\"Authorizes sortition pool for the provided operator. Operator's authorizers need to authorize individual sortition pools per application since they may be interested in participating only in a subset of keep types used by the given application.\"},\"availableUnbondedValue(address,address,address)\":{\"notice\":\"Returns the amount of wei the operator has made available for bonding and that is still unbounded. If the operator doesn't exist or bond creator is not authorized as an operator contract or it is not authorized by the operator or there is no secondary authorization for the provided sortition pool, function returns 0.\"},\"bondAmount(address,address,uint256)\":{\"notice\":\"Returns value of wei bonded for the operator.\"},\"constructor\":\"Initializes Keep Bonding contract.\",\"createBond(address,address,uint256,uint256,address)\":{\"notice\":\"Create bond for the given operator, holder, reference and amount.\"},\"deauthorizeSortitionPoolContract(address,address)\":{\"notice\":\"Deauthorizes sortition pool for the provided operator. Authorizer may deauthorize individual sortition pool in case the operator should no longer be eligible for work selection and the application represented by the sortition pool should no longer be eligible to create bonds for the operator.\"},\"deposit(address)\":{\"notice\":\"Add the provided value to operator's pool available for bonding.\"},\"freeBond(address,uint256)\":{\"notice\":\"Releases the bond and moves the bond value to the operator's unbounded value pool.\"},\"hasSecondaryAuthorization(address,address)\":{\"notice\":\"Checks if the sortition pool has been authorized for the provided operator by its authorizer.\"},\"reassignBond(address,uint256,address,uint256)\":{\"notice\":\"Reassigns a bond to a new holder under a new reference.\"},\"seizeBond(address,uint256,uint256,address)\":{\"notice\":\"Seizes the bond by moving some or all of the locked bond to the provided destination address.\"},\"withdraw(uint256,address)\":{\"notice\":\"Withdraws amount from operator's value available for bonding. Should not be used by grantee of managed grants. For this case, please use `withdrawAsManagedGrantee`.     /// This function can be called only by: - operator, - liquid, staked tokens owner (not a grant), - direct staked tokens grantee (not a managed grant). \"},\"withdrawAsManagedGrantee(uint256,address,address)\":{\"notice\":\"Withdraws amount from operator's value available for bonding. Can be called only by staked tokens managed grantee.\"}},\"notice\":\"Contract holding deposits from keeps' operators.\"}},\"settings\":{\"compilationTarget\":{\"/root/project/solidity/contracts/KeepBonding.sol\":\"KeepBonding\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/root/project/solidity/contracts/AbstractBonding.sol\":{\"keccak256\":\"0x9f6a7e179489b15fdaaeab93929dd23c1795650d2ebb6743a1f85acf37739f2b\",\"urls\":[\"bzz-raw://ba4950fcff377a3976a3189e0afc39d44627742ddb628505541abb3d457cadce\",\"dweb:/ipfs/QmQqPFCs5DJXq1JrXKrgnneK4BBNhdt54FEgB4jBZJJjXG\"]},\"/root/project/solidity/contracts/KeepBonding.sol\":{\"keccak256\":\"0xcdd4af2c10f0689e1a6fdbc2022e68c31181807a4de80271a0a94b6647d27ed4\",\"urls\":[\"bzz-raw://1ae752a5bb49be3d113f3a44d87ce0212f74b99b0a006857ae0ca6f165e9d50e\",\"dweb:/ipfs/QmZK6WedUV6sTbRJVJ1h2vHudFByaMoAREqdyfTTdC4ojZ\"]},\"/root/project/solidity/contracts/api/IBondingManagement.sol\":{\"keccak256\":\"0x33fa3dbe1638cf6794746050d8baeb625328792b2bd0b93ff3836cba92f1a0c4\",\"urls\":[\"bzz-raw://11593068496b8e43ebf4cfe51aa563d8583f02f88af3cadfb74ec770878df143\",\"dweb:/ipfs/QmZRHJARgWWWS3eAHBcYqXJuaukdiRM2MZgpb3snuCPGsr\"]},\"@keep-network/keep-core/contracts/Authorizations.sol\":{\"keccak256\":\"0xd49b3840507c924cc37ac2da48bf1549013a79d84daf2cb106b4d4b9c6096e7a\",\"urls\":[\"bzz-raw://2b740d974564d027f9df04253f71ce2314839a682beac926b778e0f7ea59fbb5\",\"dweb:/ipfs/QmamRuiYLpt2fCUPrQypkvrf7BrCsdV12QgaSHQYPsJHT2\"]},\"@keep-network/keep-core/contracts/GrantStakingPolicy.sol\":{\"keccak256\":\"0x9d7604d5ccd4bf23b5aca39074183aabad98ce47bc74edd2023e7e0b1be6d1b5\",\"urls\":[\"bzz-raw://92fb21051ecfa9b9885b775c2cff1778cfbab3afe3b436e234a4f08181277983\",\"dweb:/ipfs/QmPxQUWpL6iFcydJxyFsZjmWRnxziPVA2rqrgwhn6F7Tfe\"]},\"@keep-network/keep-core/contracts/KeepRegistry.sol\":{\"keccak256\":\"0x723cf0ade28c4158935e6c22f1da1ee98252ad1bc1cac30fe8fa462fe36ea886\",\"urls\":[\"bzz-raw://6244a0370c42ae7bac430e646694d64b80397e02209ae9ec1e01776e6b5a49fc\",\"dweb:/ipfs/QmcygjqGFv81ZpyKTUwdMRt1VdnM9H6pGUuKAP5YLmL5U8\"]},\"@keep-network/keep-core/contracts/KeepToken.sol\":{\"keccak256\":\"0x50defd2a00e356ed8eaf9aba405719f567c2da0164db5cdeadd68d155f6ded3b\",\"urls\":[\"bzz-raw://dbc8fb24f311c2dc95a26b1a1dfc9c7d93c634d32ef623fc23f799da5988fafb\",\"dweb:/ipfs/QmShZ3FtP2WUC9r1rbka8BWSf6oFkBbuxgxiDqhpwxo6zZ\"]},\"@keep-network/keep-core/contracts/ManagedGrant.sol\":{\"keccak256\":\"0x47f1cccc9f9c095b34ca514ae25cc467bbced15251b06f39896e0237e7fdec7c\",\"urls\":[\"bzz-raw://cad43bec15804ff17bd40fdee3598676f716b60204da9be163f15f45135ad250\",\"dweb:/ipfs/QmYHYEfR2UPZJZpsDhN2o1iD7drVSz8oqbYQFVT4G2oKqr\"]},\"@keep-network/keep-core/contracts/StakeDelegatable.sol\":{\"keccak256\":\"0xa1d81d17bc9f6bcc5878fb9b8acfdf7797c1561bf35111bac6bdbc3bba2c62aa\",\"urls\":[\"bzz-raw://deca3e5444cd9a5546818854009f9ac8c8e58479609de1a128ca73863f10ae7a\",\"dweb:/ipfs/QmcWYJkcHxsmCEhxRz6W5gSBgH597VYZgEaog9pzoLyZtt\"]},\"@keep-network/keep-core/contracts/TokenGrant.sol\":{\"keccak256\":\"0xad97f1a667f3be66dc6904fb7925e940ca57e4c88d38ae960672d95d7911bf6f\",\"urls\":[\"bzz-raw://f3f6b377ddcc2ad2b47811f115c20bdf6a6a208066afaebe027ac4eb165ca231\",\"dweb:/ipfs/QmXNSkqCDoBS1KGQbQ3PqXr1iMPgkPNWLcEKiBrV8u5LeW\"]},\"@keep-network/keep-core/contracts/TokenGrantStake.sol\":{\"keccak256\":\"0x014bbb7f336388024480415391cad745ec52cd255cd2740c890948246ab4d524\",\"urls\":[\"bzz-raw://745d488e7271fe9c71879c09fd09eb96b2193346adfddbb59638b80610707be3\",\"dweb:/ipfs/QmR3DyUzhTjE971QovXxMchRkUD3eHUj5S73Eahrf2Wyw8\"]},\"@keep-network/keep-core/contracts/TokenSender.sol\":{\"keccak256\":\"0xe50a3a7d2f30e8801d8b608c462f65c868e17ff8b2f0db3448876adf0f288117\",\"urls\":[\"bzz-raw://f040546b183d26a9e26adfc01a6425eb6bce1cec1ab5b142aa360c8096ede385\",\"dweb:/ipfs/QmdRa8huRUmsTTvwnWPBF7V2gTQAGsGn3VFUeBfbisBszw\"]},\"@keep-network/keep-core/contracts/TokenStaking.sol\":{\"keccak256\":\"0x957a8b500117fd8c74466e9c2cfd13e295e5cd66107bda1e5fdea1871248d0e8\",\"urls\":[\"bzz-raw://c6cca24bbf724e77009cb683d1715b8ffb1faa7ad2089156d6fc8d600a397fd4\",\"dweb:/ipfs/QmeVnKTgFhfVSfEgCcoFD86MfGUB9FTD8cbi5SxX2Vmy67\"]},\"@keep-network/keep-core/contracts/TokenStakingEscrow.sol\":{\"keccak256\":\"0x152a565d564bee09ea3f0f363c912fe3361966bf8d60f14ebcb8bf593d3b140e\",\"urls\":[\"bzz-raw://78ffe4daadcfeacc49c45c4e9879f62c2df3bdd00587b033492ee901537976f1\",\"dweb:/ipfs/QmPwmSu4XF7KpHnC6bqBTkrkjA6CUnC8h5PML9DqkAzLW8\"]},\"@keep-network/keep-core/contracts/libraries/RolesLookup.sol\":{\"keccak256\":\"0x4622ccfb359f6478d3e87fb99f755dcebde1b5040662f3572ab8c8d50d2f8bc0\",\"urls\":[\"bzz-raw://cee3570c755b0a30412af08ce4663f85078b10a0eccf6808bec125897c7ead8e\",\"dweb:/ipfs/Qmc9EAjLfBYXfhtd24uNFzu1XKrPaqS5ismF4ZGsPyiBuU\"]},\"@keep-network/keep-core/contracts/libraries/grant/UnlockingSchedule.sol\":{\"keccak256\":\"0x26f8fe158e3f661bc54fc42a50a1686ef92dd18316a03592bafa2db6a2af9c3f\",\"urls\":[\"bzz-raw://718b4a48d7a50c151328cd15e91e9b9b4cba0db7f7b6b06533709614f9811a55\",\"dweb:/ipfs/QmYyTN6cLZiWumwE6jt2yDHNtc6DMCXaEntgKAN3zqp8yX\"]},\"@keep-network/keep-core/contracts/libraries/staking/GrantStaking.sol\":{\"keccak256\":\"0x96253ba2eb78b83a04dd48f0a7ff6083ca72d6e4a27dec0888959c1b3b0be9aa\",\"urls\":[\"bzz-raw://a2ad3ddeba9de2f24b1c1c0339baf52a0b0446248ddfc0554d8fb71ce2057c0f\",\"dweb:/ipfs/QmdYxpcxm8TG7i3qYswudhxvff8hnARSR1GsVcY2fjUpzh\"]},\"@keep-network/keep-core/contracts/libraries/staking/LockUtils.sol\":{\"keccak256\":\"0x0fbd9a4d82cf8803f00cb59cca9580d379c8d98a759b8a6d74f75f01c19fc635\",\"urls\":[\"bzz-raw://f2df931f0a11d4f63aa1f6193419606711a24ce7381dd15db52419c783dc7952\",\"dweb:/ipfs/QmRMGWSbfYPaxppBb7w2cQHpAwDc4T9MBmpZqU396i8hKK\"]},\"@keep-network/keep-core/contracts/libraries/staking/Locks.sol\":{\"keccak256\":\"0xf45306074f9e893646c21e53954891e29c8011887545d8bbbcab7ef74558b18a\",\"urls\":[\"bzz-raw://971d3c54afde9050e455e79ec42b28d86a101bec8afab30e22b1fa4bfc110cc4\",\"dweb:/ipfs/QmfGTvrbc8dJXaxsxAmZM6oU8AvP5V6C2PQ5JF3gCJC81m\"]},\"@keep-network/keep-core/contracts/libraries/staking/MinimumStakeSchedule.sol\":{\"keccak256\":\"0x31a399a918eba21f0002019a70b1b68c9610a5a4977fcd874b86d4965eb974c3\",\"urls\":[\"bzz-raw://acbe55a89d5e6f7b6d4add0764e7b47acbdc31afc0d5b1f211b45546d3a5cd6c\",\"dweb:/ipfs/QmcXSUaLV7d117ZvyMnRB3MVXVEGy62ccB5u6d8h1Sm792\"]},\"@keep-network/keep-core/contracts/libraries/staking/TopUps.sol\":{\"keccak256\":\"0xe3a3c8d5e542f4f8ac8fdab92de57081257e1c07288e0e592cfc27551085e07f\",\"urls\":[\"bzz-raw://4cffa006da7f76868bcca1d107be436f3cd83339ff76df79c3e92a029e7ad66a\",\"dweb:/ipfs/QmZ5AArQ3gKBeXqGwGnSH45BQZQpGvjuQ4LnNaarrLrdy5\"]},\"@keep-network/keep-core/contracts/utils/AddressArrayUtils.sol\":{\"keccak256\":\"0xfb546b43ffd00d565d8440b6d221f5f046222e95469e33044665a56e79fcde48\",\"urls\":[\"bzz-raw://1f947ef8956e26d564cffd73a4f0dcdb02db1d7a46774d4e8876328116f6b663\",\"dweb:/ipfs/QmYUpg3JhhkogsY5nnjyMg6TEwoqRzTkJAWdhQGSbYqMH3\"]},\"@keep-network/keep-core/contracts/utils/BytesLib.sol\":{\"keccak256\":\"0xf5c726e1c77dea37b9ea1edd9bc7b4eebfafe33ce766a2607eb37d7144e4d68c\",\"urls\":[\"bzz-raw://32f61bad1923d749aff36ad9f62929e603ed27832348ba58d44d01561339d761\",\"dweb:/ipfs/QmWvfwapwUr9SnnEWXdmpo4r2TtVPFJFSUBXKJQpLZkYp1\"]},\"@keep-network/keep-core/contracts/utils/OperatorParams.sol\":{\"keccak256\":\"0xc13cbf7a6ad4740a8ad6373229b20b66eb4cc3d7aa9870161765ab8197513ab7\",\"urls\":[\"bzz-raw://e8343bc058fcee610863777792a25608549d80e126a05d076481dedb48587565\",\"dweb:/ipfs/QmR8ztc4StcK4yw7QmXj2b9TtS3Qs1BERrqDLtPZmUiffS\"]},\"@keep-network/keep-core/contracts/utils/PercentUtils.sol\":{\"keccak256\":\"0x696b15997a739e6c47c5bc29e1f9023998bb188405221a6b337377bca4ab3f68\",\"urls\":[\"bzz-raw://e93e2287fe6b6e1c5cc45ebc92b9d682e19a5b1302e00cb037391da753282bbf\",\"dweb:/ipfs/QmRXmEopRWNaL7mvY5nTyNNob3EPHF67R6Nxhm3F4VsDoo\"]},\"@keep-network/sortition-pools/contracts/api/IBonding.sol\":{\"keccak256\":\"0xe62ea5302af749042e419ad1643f0e9788bbbefe82a5c5d0b3e77a4a5a4b241e\",\"urls\":[\"bzz-raw://3ac748582f07716200c2f500aee47a8c2a79c1144fe3454e112290906cb3dfbf\",\"dweb:/ipfs/QmdNqK1V25QB1asWyWJfsSAVxorTjBp8DXG5eXw71e31rM\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzz-raw://d62d769b2219d5de39013093412623e624fa887f871826ea3bae6052ee893610\",\"dweb:/ipfs/QmV3yVktya1s617QmuzQR2CfuJgUi3dR2xEZY9ecmqZ2G1\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xf79fb10e8235770eb4aea7249034076a3cc9f9119ad944fc48705bae9c9d20dc\",\"urls\":[\"bzz-raw://cd3429aa9a4878dcf6c73faa32c3722f4013d4be012ece543b246faa6b50f55c\",\"dweb:/ipfs/QmS55hgTvNEAKinus19m65CB4wcymN8EiUPFpRx5tYJ1i2\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x852793a3c2f86d336a683b30d688ec3dcfc57451af5a2bf5975cda3b7191a901\",\"urls\":[\"bzz-raw://4f5b57664069671648fb81f55b0082faecdf1b2f159eec6b1fa6cef9b7d73bc5\",\"dweb:/ipfs/QmcyytaLs7zFdb4Uu7C5PmQRhQdB3wA3fUdkV6mkYfdDFH\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0xa5ebf3344a36eb60e723e0764d85251c496e15e4b2d737b56415502b559a1765\",\"urls\":[\"bzz-raw://c543fd1fc299b7d32c658c86118ff2d0e7897a7c8b9d5f576fe6c0271c28961b\",\"dweb:/ipfs/QmNMrjLnsC4JP54aXLHhpra5NPTAs8rrd2bgXfYYYdJMhS\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0xc61b3603089b09a730d8ca72e9133a496cc4405da40e9b87c12f073245d774bf\",\"urls\":[\"bzz-raw://de8bb0003d53de236913f0e0102e7a9d015e02098f2495edd000f207fe2be2f4\",\"dweb:/ipfs/QmbtwNwAJEehWWL7yGGyyMoenQvcqtz91pqLgQPpLRoLYC\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzz-raw://d0abb99bb8bfc2bc0a89902b8ed1dc0442ad08cc78cee64c291b3df6a27bcccc\",\"dweb:/ipfs/QmP5NaEwZthQeM2ESz4WTT3osrP7jhbvu7ocbttBi2JAw6\"]},\"openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf6f89424e17870561dc23c5933c55c5726b66a68d51ad2a2c00c569a5f02f507\",\"urls\":[\"bzz-raw://005657a7ffbf6d12726ac0167b55be965dc473d43f061b605f883a54cc00ab4f\",\"dweb:/ipfs/QmaBzyvDQyNnn6DXQYewEtN9Go85orikSnW9PwNWqUGPEX\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xf3358e5819ca73357abd6c90bdfffd0474af54364897f6b3e3234c4b71fbe9a1\",\"urls\":[\"bzz-raw://75ae8d04454d1511a2ed986cc8585736f05c5c25280683b3d24712a9f414a4bf\",\"dweb:/ipfs/Qmb3kNCoBUZdah1AgBBD4zMk898j5Qw8ahT1w5cCMYp5Y3\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "2110:2926:9:-;;;2602:280;8:9:-1;5:2;;;30:1;27;20:12;5:2;2602:280:9;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2602:280:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2748:15;3851::1;3827:8;;:40;;;;;;;;;;;;;;;;;;3773:101;2803:19:9;2775:12;;:48;;;;;;;;;;;;;;;;;;2857:17;2833:10;;:42;;;;;;;;;;;;;;;;;;2602:280;;;2110:2926;;;;;;",
  "deployedSourceMap": "2110:2926:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3378:391;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3378:391:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3378:391:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12450:251:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12450:251:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12450:251:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10679:756;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10679:756:1;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;10679:756:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5596:599;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5596:599:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5596:599:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7943:286;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7943:286:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7943:286:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2373:48;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2373:48:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2373:48:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4078:408:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4078:408:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4078:408:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12874:195:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12874:195:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12874:195:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;9765:478;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9765:478:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9765:478:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8663:778;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8663:778:1;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;8663:778:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4865:169:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4865:169:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4865:169:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11790:248:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11790:248:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11790:248:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6722:942;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6722:942:1;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;6722:942:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4492:230:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4492:230:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4492:230:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4010:629:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4010:629:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;4728:131:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4728:131:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4728:131:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3378:391;3482:8;3468:22;;:10;:22;;;:100;;;;3510:58;3545:8;3555:12;;;;;;;;;;;3510:10;:34;;;;:58;;;;;:::i;:::-;3468:100;:173;;;;3588:53;3620:8;3630:10;;;;;;;;;;;3588;:31;;;;:53;;;;;:::i;:::-;3468:173;3447:274;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3732:30;3745:6;3753:8;3732:12;:30::i;:::-;3378:391;;:::o;12450:251:1:-;12607:10;12580:37;;:23;12593:9;12580:12;:23::i;:::-;:37;;;12572:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12689:5;12646:15;:26;12662:9;12646:26;;;;;;;;;;;;;;;:40;12673:12;12646:40;;;;;;;;;;;;;;;;:48;;;;;;;;;;;;;;;;;;12450:251;;:::o;10679:756::-;10854:1;10845:6;:10;10837:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10915:22;10940:10;10915:35;;10960:14;11017:8;11027:6;11035:11;11000:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;11000:47:1;;;10977:80;;;;;;10960:97;;11112:6;11089:11;:19;11101:6;11089:19;;;;;;;;;;;;:29;;11068:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11218:31;11242:6;11218:11;:19;11230:6;11218:19;;;;;;;;;;;;:23;;:31;;;;:::i;:::-;11196:11;:19;11208:6;11196:19;;;;;;;;;;;:53;;;;11261:12;11279:11;:16;;11302:6;11279:34;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;11260:53:1;;;11331:7;11323:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11395:11;11385:8;11374:54;;;11408:11;11421:6;11374:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;10679:756;;;;;;;:::o;5596:599::-;5751:7;5918:8;;;;;;;;;;;:35;;;5954:11;5918:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5918:48:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5918:48:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5918:48:1;;;;;;;;;;;;;;;;:110;;;;;5982:46;6006:8;6016:11;5982:23;:46::i;:::-;5918:110;:186;;;;;6044:60;6070:8;6080:23;6044:25;:60::i;:::-;5918:186;5901:269;;;6136:13;:23;6150:8;6136:23;;;;;;;;;;;;;;;;6129:30;;;;5901:269;6187:1;6180:8;;5596:599;;;;;;:::o;7943:286::-;8069:7;8088:14;8145:8;8155:6;8163:11;8128:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;8128:47:1;;;8105:80;;;;;;8088:97;;8203:11;:19;8215:6;8203:19;;;;;;;;;;;;8196:26;;;7943:286;;;;;:::o;2373:48::-;;;;;;;;;;;;;;;;;:::o;4078:408:9:-;4236:136;4292:8;4318:12;4348:10;;;;;;;;;;;4236;:38;;;;:136;;;;;;:::i;:::-;4215:223;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4449:30;4462:6;4470:8;4449:12;:30::i;:::-;4078:408;;;:::o;12874:195:1:-;12995:4;13022:15;:26;13038:9;13022:26;;;;;;;;;;;;;;;:40;13049:12;13022:40;;;;;;;;;;;;;;;;;;;;;;;;;13015:47;;12874:195;;;;:::o;9765:478::-;9839:14;9856:10;9839:27;;9876:14;9933:8;9943:6;9951:11;9916:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;9916:47:1;;;9893:80;;;;;;9876:97;;10014:1;9992:11;:19;10004:6;9992:19;;;;;;;;;;;;:23;9984:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10045:14;10062:11;:19;10074:6;10062:19;;;;;;;;;;;;10045:36;;10113:1;10091:11;:19;10103:6;10091:19;;;;;;;;;;;:23;;;;10150:35;10178:6;10150:13;:23;10164:8;10150:23;;;;;;;;;;;;;;;;:27;;:35;;;;:::i;:::-;10124:13;:23;10138:8;10124:23;;;;;;;;;;;;;;;:61;;;;10224:11;10214:8;10201:35;;;;;;;;;;;;9765:478;;;;;:::o;8663:778::-;8822:14;8839:10;8822:27;;8859:14;8916:8;8926:6;8934:11;8899:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;8899:47:1;;;8876:80;;;;;;8859:97;;8997:1;8975:11;:19;8987:6;8975:19;;;;;;;;;;;;:23;8967:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9028:17;9088:8;9098:9;9109:14;9071:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;9071:53:1;;;9048:86;;;;;;9028:106;;9192:1;9166:11;:22;9178:9;9166:22;;;;;;;;;;;;:27;9145:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9302:11;:19;9314:6;9302:19;;;;;;;;;;;;9277:11;:22;9289:9;9277:22;;;;;;;;;;;:44;;;;9353:1;9331:11;:19;9343:6;9331:19;;;;;;;;;;;:23;;;;9395:11;9385:8;9370:64;;;9408:9;9419:14;9370:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;8663:778;;;;;;;:::o;4865:169:9:-;4952:15;4990:12;;;;;;;;;;;:26;;;5017:9;4990:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4990:37:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4990:37:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4990:37:9;;;;;;;;;;;;;;;;4983:44;;4865:169;;;:::o;11790:248:1:-;11945:10;11918:37;;:23;11931:9;11918:12;:23::i;:::-;:37;;;11910:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12027:4;11984:15;:26;12000:9;11984:26;;;;;;;;;;;;;;;:40;12011:12;11984:40;;;;;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;11790:248;;:::o;6722:942::-;7065:6;6930:131;6970:8;6996:10;7024:23;6930:22;:131::i;:::-;:141;;6909:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7135:14;7192:8;7202:6;7210:11;7175:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;7175:47:1;;;7152:80;;;;;;7135:97;;7287:1;7264:11;:19;7276:6;7264:19;;;;;;;;;;;;:24;7243:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7398:35;7426:6;7398:13;:23;7412:8;7398:23;;;;;;;;;;;;;;;;:27;;:35;;;;:::i;:::-;7372:13;:23;7386:8;7372:23;;;;;;;;;;;;;;;:61;;;;7465:31;7489:6;7465:11;:19;7477:6;7465:19;;;;;;;;;;;;:23;;:31;;;;:::i;:::-;7443:11;:19;7455:6;7443:19;;;;;;;;;;;:53;;;;7579:23;7512:145;;7559:6;7512:145;;7537:8;7512:145;;;7616:11;7641:6;7512:145;;;;;;;;;;;;;;;;;;;;;;;;6722:942;;;;;;:::o;4492:230:9:-;4614:4;4649:12;;;;;;;;;;;:36;;;4686:9;4697:17;4649:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4649:66:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4649:66:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4649:66:9;;;;;;;;;;;;;;;;4630:85;;4492:230;;;;:::o;4010:629:1:-;4070:19;4092:23;4106:8;4092:13;:23::i;:::-;4070:45;;4419:1;4396:25;;:11;:25;;;;4375:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4523:38;4551:9;4523:13;:23;4537:8;4523:23;;;;;;;;;;;;;;;;:27;;:38;;;;:::i;:::-;4497:13;:23;4511:8;4497:23;;;;;;;;;;;;;;;:64;;;;4609:11;4576:56;;4599:8;4576:56;;;4622:9;4576:56;;;;;;;;;;;;;;;;;;4010:629;;:::o;4728:131:9:-;4790:7;4816:12;;;;;;;;;;;:25;;;4842:9;4816:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4816:36:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4816:36:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4816:36:9;;;;;;;;;;;;;;;;4809:43;;4728:131;;;:::o;612:237:43:-;771:4;832:10;794:48;;:16;:24;;;819:8;794:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;794:34:43;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;794:34:43;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;794:34:43;;;;;;;;;;;;;;;;:48;;;787:55;;612:237;;;;;:::o;1527:277::-;1668:4;1684:26;1713:10;:30;;;1744:7;1713:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1713:39:43;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1713:39:43;;;;;;39:16:-1;36:1;17:17;2:54;1713:39:43;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1713:39:43;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;385:12;380:3;373:25;421:4;416:3;412:14;405:21;;0:433;;1713:39:43;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1713:39:43;;;;;;;;;;;1684:68;;1769:28;1788:8;1769:9;:18;;:28;;;;:::i;:::-;1762:35;;;1527:277;;;;;:::o;14120:495:1:-;14243:6;14216:13;:23;14230:8;14216:23;;;;;;;;;;;;;;;;:33;;14195:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14339:35;14367:6;14339:13;:23;14353:8;14339:23;;;;;;;;;;;;;;;;:27;;:35;;;;:::i;:::-;14313:13;:23;14327:8;14313:23;;;;;;;;;;;;;;;:61;;;;14385:19;14407:23;14421:8;14407:13;:23::i;:::-;14385:45;;14442:12;14460:11;:16;;14483:6;14460:34;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;14441:53:1;;;14512:7;14504:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14588:11;14555:53;;14578:8;14555:53;;;14601:6;14555:53;;;;;;;;;;;;;;;;;;14120:495;;;;:::o;1274:179:69:-;1332:7;1364:1;1359;:6;;1351:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1410:9;1426:1;1422;:5;1410:17;;1445:1;1438:8;;;1274:179;;;;:::o;2671:508:43:-;2857:4;2942:7;2894:55;;2907:20;2894:42;;;:44;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2894:44:43;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2894:44:43;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2894:44:43;;;;;;;;;;;;;;;;:55;;;2873:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3024:26;3053:10;:30;;;3097:20;3053:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3053:74:43;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3053:74:43;;;;;;39:16:-1;36:1;17:17;2:54;3053:74:43;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3053:74:43;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;385:12;380:3;373:25;421:4;416:3;412:14;405:21;;0:433;;3053:74:43;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3053:74:43;;;;;;;;;;;3024:103;;3144:28;3163:8;3144:9;:18;;:28;;;;:::i;:::-;3137:35;;;2671:508;;;;;;:::o;834:176:69:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;59:286:50:-;165:4;190:6;199:1;190:10;;185:132;206:4;:11;202:1;:15;185:132;;;254:4;259:1;254:7;;;;;;;;;;;;;;242:19;;:8;:19;;;238:69;;;288:4;281:11;;;;;238:69;219:3;;;;;;;185:132;;;;333:5;326:12;;59:286;;;;;:::o",
  "source": "/**\n▓▓▌ ▓▓ ▐▓▓ ▓▓▓▓▓▓▓▓▓▓▌▐▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▄\n▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▌▐▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n  ▓▓▓▓▓▓    ▓▓▓▓▓▓▓▀    ▐▓▓▓▓▓▓    ▐▓▓▓▓▓   ▓▓▓▓▓▓     ▓▓▓▓▓   ▐▓▓▓▓▓▌   ▐▓▓▓▓▓▓\n  ▓▓▓▓▓▓▄▄▓▓▓▓▓▓▓▀      ▐▓▓▓▓▓▓▄▄▄▄         ▓▓▓▓▓▓▄▄▄▄         ▐▓▓▓▓▓▌   ▐▓▓▓▓▓▓\n  ▓▓▓▓▓▓▓▓▓▓▓▓▓▀        ▐▓▓▓▓▓▓▓▓▓▓         ▓▓▓▓▓▓▓▓▓▓▌        ▐▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n  ▓▓▓▓▓▓▀▀▓▓▓▓▓▓▄       ▐▓▓▓▓▓▓▀▀▀▀         ▓▓▓▓▓▓▀▀▀▀         ▐▓▓▓▓▓▓▓▓▓▓▓▓▓▓▀\n  ▓▓▓▓▓▓   ▀▓▓▓▓▓▓▄     ▐▓▓▓▓▓▓     ▓▓▓▓▓   ▓▓▓▓▓▓     ▓▓▓▓▓   ▐▓▓▓▓▓▌\n▓▓▓▓▓▓▓▓▓▓ █▓▓▓▓▓▓▓▓▓ ▐▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓  ▓▓▓▓▓▓▓▓▓▓\n▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▐▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓  ▓▓▓▓▓▓▓▓▓▓\n\n                           Trust math, not hardware.\n*/\n\npragma solidity 0.5.17;\n\nimport \"./AbstractBonding.sol\";\n\nimport \"@keep-network/keep-core/contracts/TokenGrant.sol\";\nimport \"@keep-network/keep-core/contracts/libraries/RolesLookup.sol\";\n\n/// @title Keep Bonding\n/// @notice Contract holding deposits from keeps' operators.\ncontract KeepBonding is AbstractBonding {\n    using RolesLookup for address payable;\n\n    // KEEP Token Staking contract.\n    TokenStaking internal tokenStaking;\n\n    // KEEP token grant contract.\n    TokenGrant internal tokenGrant;\n\n    /// @notice Initializes Keep Bonding contract.\n    /// @param registryAddress Keep registry contract address.\n    /// @param tokenStakingAddress KEEP token staking contract address.\n    /// @param tokenGrantAddress KEEP token grant contract address.\n    constructor(\n        address registryAddress,\n        address tokenStakingAddress,\n        address tokenGrantAddress\n    ) public AbstractBonding(registryAddress) {\n        tokenStaking = TokenStaking(tokenStakingAddress);\n        tokenGrant = TokenGrant(tokenGrantAddress);\n    }\n\n    /// @notice Withdraws amount from operator's value available for bonding.\n    /// Should not be used by grantee of managed grants. For this case,\n    /// please use `withdrawAsManagedGrantee`.\n    ///\n    /// This function can be called only by:\n    /// - operator,\n    /// - liquid, staked tokens owner (not a grant),\n    /// - direct staked tokens grantee (not a managed grant).\n    ///\n    /// @param amount Value to withdraw in wei.\n    /// @param operator Address of the operator.\n    function withdraw(uint256 amount, address operator) public {\n        require(\n            msg.sender == operator ||\n                msg.sender.isTokenOwnerForOperator(operator, tokenStaking) ||\n                msg.sender.isGranteeForOperator(operator, tokenGrant),\n            \"Only operator or the owner is allowed to withdraw bond\"\n        );\n\n        withdrawBond(amount, operator);\n    }\n\n    /// @notice Withdraws amount from operator's value available for bonding.\n    /// Can be called only by staked tokens managed grantee.\n    /// @param amount Value to withdraw in wei.\n    /// @param operator Address of the operator.\n    /// @param managedGrant Address of the managed grant contract.\n    function withdrawAsManagedGrantee(\n        uint256 amount,\n        address operator,\n        address managedGrant\n    ) public {\n        require(\n            msg.sender.isManagedGranteeForOperator(\n                operator,\n                managedGrant,\n                tokenGrant\n            ),\n            \"Only grantee is allowed to withdraw bond\"\n        );\n\n        withdrawBond(amount, operator);\n    }\n\n    function isAuthorizedForOperator(\n        address _operator,\n        address _operatorContract\n    ) public view returns (bool) {\n        return\n            tokenStaking.isAuthorizedForOperator(_operator, _operatorContract);\n    }\n\n    function authorizerOf(address _operator) public view returns (address) {\n        return tokenStaking.authorizerOf(_operator);\n    }\n\n    function beneficiaryOf(address _operator)\n        public\n        view\n        returns (address payable)\n    {\n        return tokenStaking.beneficiaryOf(_operator);\n    }\n}\n",
  "sourcePath": "/root/project/solidity/contracts/KeepBonding.sol",
  "ast": {
    "absolutePath": "/root/project/solidity/contracts/KeepBonding.sol",
    "exportedSymbols": {
      "KeepBonding": [
        3664
      ]
    },
    "id": 3665,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3523,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "1837:23:9"
      },
      {
        "absolutePath": "/root/project/solidity/contracts/AbstractBonding.sol",
        "file": "./AbstractBonding.sol",
        "id": 3524,
        "nodeType": "ImportDirective",
        "scope": 3665,
        "sourceUnit": 1743,
        "src": "1862:31:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@keep-network/keep-core/contracts/TokenGrant.sol",
        "file": "@keep-network/keep-core/contracts/TokenGrant.sol",
        "id": 3525,
        "nodeType": "ImportDirective",
        "scope": 3665,
        "sourceUnit": 7451,
        "src": "1895:58:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@keep-network/keep-core/contracts/libraries/RolesLookup.sol",
        "file": "@keep-network/keep-core/contracts/libraries/RolesLookup.sol",
        "id": 3526,
        "nodeType": "ImportDirective",
        "scope": 3665,
        "sourceUnit": 10293,
        "src": "1954:69:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3527,
              "name": "AbstractBonding",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1742,
              "src": "2134:15:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AbstractBonding_$1742",
                "typeString": "contract AbstractBonding"
              }
            },
            "id": 3528,
            "nodeType": "InheritanceSpecifier",
            "src": "2134:15:9"
          }
        ],
        "contractDependencies": [
          1742,
          3982,
          15552
        ],
        "contractKind": "contract",
        "documentation": "@title Keep Bonding\n @notice Contract holding deposits from keeps' operators.",
        "fullyImplemented": true,
        "id": 3664,
        "linearizedBaseContracts": [
          3664,
          1742,
          3982,
          15552
        ],
        "name": "KeepBonding",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3531,
            "libraryName": {
              "contractScope": null,
              "id": 3529,
              "name": "RolesLookup",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10292,
              "src": "2162:11:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RolesLookup_$10292",
                "typeString": "library RolesLookup"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "2156:38:9",
            "typeName": {
              "id": 3530,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2178:15:9",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            }
          },
          {
            "constant": false,
            "id": 3533,
            "name": "tokenStaking",
            "nodeType": "VariableDeclaration",
            "scope": 3664,
            "src": "2236:34:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TokenStaking_$9183",
              "typeString": "contract TokenStaking"
            },
            "typeName": {
              "contractScope": null,
              "id": 3532,
              "name": "TokenStaking",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9183,
              "src": "2236:12:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokenStaking_$9183",
                "typeString": "contract TokenStaking"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3535,
            "name": "tokenGrant",
            "nodeType": "VariableDeclaration",
            "scope": 3664,
            "src": "2311:30:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TokenGrant_$7450",
              "typeString": "contract TokenGrant"
            },
            "typeName": {
              "contractScope": null,
              "id": 3534,
              "name": "TokenGrant",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7450,
              "src": "2311:10:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokenGrant_$7450",
                "typeString": "contract TokenGrant"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3559,
              "nodeType": "Block",
              "src": "2765:117:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3547,
                      "name": "tokenStaking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3533,
                      "src": "2775:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenStaking_$9183",
                        "typeString": "contract TokenStaking"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3549,
                          "name": "tokenStakingAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3539,
                          "src": "2803:19:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3548,
                        "name": "TokenStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9183,
                        "src": "2790:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TokenStaking_$9183_$",
                          "typeString": "type(contract TokenStaking)"
                        }
                      },
                      "id": 3550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2790:33:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenStaking_$9183",
                        "typeString": "contract TokenStaking"
                      }
                    },
                    "src": "2775:48:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenStaking_$9183",
                      "typeString": "contract TokenStaking"
                    }
                  },
                  "id": 3552,
                  "nodeType": "ExpressionStatement",
                  "src": "2775:48:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3553,
                      "name": "tokenGrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3535,
                      "src": "2833:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenGrant_$7450",
                        "typeString": "contract TokenGrant"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3555,
                          "name": "tokenGrantAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3541,
                          "src": "2857:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3554,
                        "name": "TokenGrant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7450,
                        "src": "2846:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TokenGrant_$7450_$",
                          "typeString": "type(contract TokenGrant)"
                        }
                      },
                      "id": 3556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2846:29:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenGrant_$7450",
                        "typeString": "contract TokenGrant"
                      }
                    },
                    "src": "2833:42:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenGrant_$7450",
                      "typeString": "contract TokenGrant"
                    }
                  },
                  "id": 3558,
                  "nodeType": "ExpressionStatement",
                  "src": "2833:42:9"
                }
              ]
            },
            "documentation": "@notice Initializes Keep Bonding contract.\n @param registryAddress Keep registry contract address.\n @param tokenStakingAddress KEEP token staking contract address.\n @param tokenGrantAddress KEEP token grant contract address.",
            "id": 3560,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3544,
                    "name": "registryAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3537,
                    "src": "2748:15:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 3545,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3543,
                  "name": "AbstractBonding",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1742,
                  "src": "2732:15:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_AbstractBonding_$1742_$",
                    "typeString": "type(contract AbstractBonding)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2732:32:9"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3537,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3560,
                  "src": "2623:23:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3536,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2623:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3539,
                  "name": "tokenStakingAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3560,
                  "src": "2656:27:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3538,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2656:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3541,
                  "name": "tokenGrantAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3560,
                  "src": "2693:25:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3540,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2693:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2613:111:9"
            },
            "returnParameters": {
              "id": 3546,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2765:0:9"
            },
            "scope": 3664,
            "src": "2602:280:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3594,
              "nodeType": "Block",
              "src": "3437:332:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 3571,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3568,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16686,
                                "src": "3468:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3569,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3468:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 3570,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3564,
                              "src": "3482:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "3468:22:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 3575,
                                "name": "operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3564,
                                "src": "3545:8:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 3576,
                                "name": "tokenStaking",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3533,
                                "src": "3555:12:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TokenStaking_$9183",
                                  "typeString": "contract TokenStaking"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_contract$_TokenStaking_$9183",
                                  "typeString": "contract TokenStaking"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 3572,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16686,
                                  "src": "3510:3:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3573,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3510:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 3574,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "isTokenOwnerForOperator",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10176,
                              "src": "3510:34:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_contract$_StakeDelegatable_$6183_$returns$_t_bool_$bound_to$_t_address_$",
                                "typeString": "function (address,address,contract StakeDelegatable) view returns (bool)"
                              }
                            },
                            "id": 3577,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3510:58:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3468:100:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3582,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3564,
                              "src": "3620:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 3583,
                              "name": "tokenGrant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3535,
                              "src": "3630:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenGrant_$7450",
                                "typeString": "contract TokenGrant"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_TokenGrant_$7450",
                                "typeString": "contract TokenGrant"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3579,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16686,
                                "src": "3588:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3588:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 3581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isGranteeForOperator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10202,
                            "src": "3588:31:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_contract$_TokenGrant_$7450_$returns$_t_bool_$bound_to$_t_address_$",
                              "typeString": "function (address,address,contract TokenGrant) view returns (bool)"
                            }
                          },
                          "id": 3584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3588:53:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3468:173:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c79206f70657261746f72206f7220746865206f776e657220697320616c6c6f77656420746f20776974686472617720626f6e64",
                        "id": 3586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3655:56:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d15dcb475e924008ca1aa25332521b0739d197945caa22d587e3888c5b259d78",
                          "typeString": "literal_string \"Only operator or the owner is allowed to withdraw bond\""
                        },
                        "value": "Only operator or the owner is allowed to withdraw bond"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d15dcb475e924008ca1aa25332521b0739d197945caa22d587e3888c5b259d78",
                          "typeString": "literal_string \"Only operator or the owner is allowed to withdraw bond\""
                        }
                      ],
                      "id": 3567,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16689,
                        16690
                      ],
                      "referencedDeclaration": 16690,
                      "src": "3447:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3447:274:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3588,
                  "nodeType": "ExpressionStatement",
                  "src": "3447:274:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3590,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3562,
                        "src": "3745:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3591,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3564,
                        "src": "3753:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3589,
                      "name": "withdrawBond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1741,
                      "src": "3732:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 3592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3732:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3593,
                  "nodeType": "ExpressionStatement",
                  "src": "3732:30:9"
                }
              ]
            },
            "documentation": "@notice Withdraws amount from operator's value available for bonding.\n Should not be used by grantee of managed grants. For this case,\n please use `withdrawAsManagedGrantee`.\n\n    /// This function can be called only by:\n - operator,\n - liquid, staked tokens owner (not a grant),\n - direct staked tokens grantee (not a managed grant).\n\n    /// @param amount Value to withdraw in wei.\n @param operator Address of the operator.",
            "id": 3595,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3562,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3595,
                  "src": "3396:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3561,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3396:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3564,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 3595,
                  "src": "3412:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3563,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3412:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3395:34:9"
            },
            "returnParameters": {
              "id": 3566,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3437:0:9"
            },
            "scope": 3664,
            "src": "3378:391:9",
            "stateMutability": "nonpayable",
            "superFunction": 1242,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3620,
              "nodeType": "Block",
              "src": "4205:281:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3608,
                            "name": "operator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3599,
                            "src": "4292:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 3609,
                            "name": "managedGrant",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3601,
                            "src": "4318:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 3610,
                            "name": "tokenGrant",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3535,
                            "src": "4348:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenGrant_$7450",
                              "typeString": "contract TokenGrant"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_contract$_TokenGrant_$7450",
                              "typeString": "contract TokenGrant"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3605,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16686,
                              "src": "4236:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3606,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4236:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 3607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isManagedGranteeForOperator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10241,
                          "src": "4236:38:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_contract$_TokenGrant_$7450_$returns$_t_bool_$bound_to$_t_address_$",
                            "typeString": "function (address,address,address,contract TokenGrant) view returns (bool)"
                          }
                        },
                        "id": 3611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4236:136:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c79206772616e74656520697320616c6c6f77656420746f20776974686472617720626f6e64",
                        "id": 3612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4386:42:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aee72b5a6c371bd1ef4cafc8bfb5ce01243beae15242cff9707752849fce500e",
                          "typeString": "literal_string \"Only grantee is allowed to withdraw bond\""
                        },
                        "value": "Only grantee is allowed to withdraw bond"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aee72b5a6c371bd1ef4cafc8bfb5ce01243beae15242cff9707752849fce500e",
                          "typeString": "literal_string \"Only grantee is allowed to withdraw bond\""
                        }
                      ],
                      "id": 3604,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16689,
                        16690
                      ],
                      "referencedDeclaration": 16690,
                      "src": "4215:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4215:223:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3614,
                  "nodeType": "ExpressionStatement",
                  "src": "4215:223:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3616,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3597,
                        "src": "4462:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3617,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3599,
                        "src": "4470:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3615,
                      "name": "withdrawBond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1741,
                      "src": "4449:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 3618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4449:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3619,
                  "nodeType": "ExpressionStatement",
                  "src": "4449:30:9"
                }
              ]
            },
            "documentation": "@notice Withdraws amount from operator's value available for bonding.\n Can be called only by staked tokens managed grantee.\n @param amount Value to withdraw in wei.\n @param operator Address of the operator.\n @param managedGrant Address of the managed grant contract.",
            "id": 3621,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawAsManagedGrantee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3597,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3621,
                  "src": "4121:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3596,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4121:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3599,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 3621,
                  "src": "4145:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3598,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4145:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3601,
                  "name": "managedGrant",
                  "nodeType": "VariableDeclaration",
                  "scope": 3621,
                  "src": "4171:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3600,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4171:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4111:86:9"
            },
            "returnParameters": {
              "id": 3603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4205:0:9"
            },
            "scope": 3664,
            "src": "4078:408:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3636,
              "nodeType": "Block",
              "src": "4620:102:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3632,
                        "name": "_operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3623,
                        "src": "4686:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3633,
                        "name": "_operatorContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3625,
                        "src": "4697:17:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3630,
                        "name": "tokenStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3533,
                        "src": "4649:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenStaking_$9183",
                          "typeString": "contract TokenStaking"
                        }
                      },
                      "id": 3631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isAuthorizedForOperator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5062,
                      "src": "4649:36:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address,address) view external returns (bool)"
                      }
                    },
                    "id": 3634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4649:66:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3629,
                  "id": 3635,
                  "nodeType": "Return",
                  "src": "4630:85:9"
                }
              ]
            },
            "documentation": null,
            "id": 3637,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAuthorizedForOperator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3623,
                  "name": "_operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 3637,
                  "src": "4534:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3622,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4534:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3625,
                  "name": "_operatorContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 3637,
                  "src": "4561:25:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3624,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4561:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4524:68:9"
            },
            "returnParameters": {
              "id": 3629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3628,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3637,
                  "src": "4614:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3627,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4614:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4613:6:9"
            },
            "scope": 3664,
            "src": "4492:230:9",
            "stateMutability": "view",
            "superFunction": 1672,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3649,
              "nodeType": "Block",
              "src": "4799:60:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3646,
                        "name": "_operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3639,
                        "src": "4842:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3644,
                        "name": "tokenStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3533,
                        "src": "4816:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenStaking_$9183",
                          "typeString": "contract TokenStaking"
                        }
                      },
                      "id": 3645,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "authorizerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6182,
                      "src": "4816:25:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view external returns (address)"
                      }
                    },
                    "id": 3647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4816:36:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3643,
                  "id": 3648,
                  "nodeType": "Return",
                  "src": "4809:43:9"
                }
              ]
            },
            "documentation": null,
            "id": 3650,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "authorizerOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3639,
                  "name": "_operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 3650,
                  "src": "4750:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3638,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4750:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4749:19:9"
            },
            "returnParameters": {
              "id": 3643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3642,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3650,
                  "src": "4790:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3641,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4790:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4789:9:9"
            },
            "scope": 3664,
            "src": "4728:131:9",
            "stateMutability": "view",
            "superFunction": 1679,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3662,
              "nodeType": "Block",
              "src": "4973:61:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3659,
                        "name": "_operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3652,
                        "src": "5017:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3657,
                        "name": "tokenStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3533,
                        "src": "4990:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenStaking_$9183",
                          "typeString": "contract TokenStaking"
                        }
                      },
                      "id": 3658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beneficiaryOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6169,
                      "src": "4990:26:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_payable_$",
                        "typeString": "function (address) view external returns (address payable)"
                      }
                    },
                    "id": 3660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4990:37:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 3656,
                  "id": 3661,
                  "nodeType": "Return",
                  "src": "4983:44:9"
                }
              ]
            },
            "documentation": null,
            "id": 3663,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beneficiaryOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3652,
                  "name": "_operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 3663,
                  "src": "4888:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3651,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4888:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4887:19:9"
            },
            "returnParameters": {
              "id": 3656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3655,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3663,
                  "src": "4952:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3654,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4952:15:9",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4951:17:9"
            },
            "scope": 3664,
            "src": "4865:169:9",
            "stateMutability": "view",
            "superFunction": 1686,
            "visibility": "public"
          }
        ],
        "scope": 3665,
        "src": "2110:2926:9"
      }
    ],
    "src": "1837:3200:9"
  },
  "legacyAST": {
    "absolutePath": "/root/project/solidity/contracts/KeepBonding.sol",
    "exportedSymbols": {
      "KeepBonding": [
        3664
      ]
    },
    "id": 3665,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3523,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "1837:23:9"
      },
      {
        "absolutePath": "/root/project/solidity/contracts/AbstractBonding.sol",
        "file": "./AbstractBonding.sol",
        "id": 3524,
        "nodeType": "ImportDirective",
        "scope": 3665,
        "sourceUnit": 1743,
        "src": "1862:31:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@keep-network/keep-core/contracts/TokenGrant.sol",
        "file": "@keep-network/keep-core/contracts/TokenGrant.sol",
        "id": 3525,
        "nodeType": "ImportDirective",
        "scope": 3665,
        "sourceUnit": 7451,
        "src": "1895:58:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@keep-network/keep-core/contracts/libraries/RolesLookup.sol",
        "file": "@keep-network/keep-core/contracts/libraries/RolesLookup.sol",
        "id": 3526,
        "nodeType": "ImportDirective",
        "scope": 3665,
        "sourceUnit": 10293,
        "src": "1954:69:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3527,
              "name": "AbstractBonding",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1742,
              "src": "2134:15:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AbstractBonding_$1742",
                "typeString": "contract AbstractBonding"
              }
            },
            "id": 3528,
            "nodeType": "InheritanceSpecifier",
            "src": "2134:15:9"
          }
        ],
        "contractDependencies": [
          1742,
          3982,
          15552
        ],
        "contractKind": "contract",
        "documentation": "@title Keep Bonding\n @notice Contract holding deposits from keeps' operators.",
        "fullyImplemented": true,
        "id": 3664,
        "linearizedBaseContracts": [
          3664,
          1742,
          3982,
          15552
        ],
        "name": "KeepBonding",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3531,
            "libraryName": {
              "contractScope": null,
              "id": 3529,
              "name": "RolesLookup",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10292,
              "src": "2162:11:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RolesLookup_$10292",
                "typeString": "library RolesLookup"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "2156:38:9",
            "typeName": {
              "id": 3530,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2178:15:9",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            }
          },
          {
            "constant": false,
            "id": 3533,
            "name": "tokenStaking",
            "nodeType": "VariableDeclaration",
            "scope": 3664,
            "src": "2236:34:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TokenStaking_$9183",
              "typeString": "contract TokenStaking"
            },
            "typeName": {
              "contractScope": null,
              "id": 3532,
              "name": "TokenStaking",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9183,
              "src": "2236:12:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokenStaking_$9183",
                "typeString": "contract TokenStaking"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3535,
            "name": "tokenGrant",
            "nodeType": "VariableDeclaration",
            "scope": 3664,
            "src": "2311:30:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TokenGrant_$7450",
              "typeString": "contract TokenGrant"
            },
            "typeName": {
              "contractScope": null,
              "id": 3534,
              "name": "TokenGrant",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7450,
              "src": "2311:10:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokenGrant_$7450",
                "typeString": "contract TokenGrant"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3559,
              "nodeType": "Block",
              "src": "2765:117:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3547,
                      "name": "tokenStaking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3533,
                      "src": "2775:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenStaking_$9183",
                        "typeString": "contract TokenStaking"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3549,
                          "name": "tokenStakingAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3539,
                          "src": "2803:19:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3548,
                        "name": "TokenStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9183,
                        "src": "2790:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TokenStaking_$9183_$",
                          "typeString": "type(contract TokenStaking)"
                        }
                      },
                      "id": 3550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2790:33:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenStaking_$9183",
                        "typeString": "contract TokenStaking"
                      }
                    },
                    "src": "2775:48:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenStaking_$9183",
                      "typeString": "contract TokenStaking"
                    }
                  },
                  "id": 3552,
                  "nodeType": "ExpressionStatement",
                  "src": "2775:48:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3553,
                      "name": "tokenGrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3535,
                      "src": "2833:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenGrant_$7450",
                        "typeString": "contract TokenGrant"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3555,
                          "name": "tokenGrantAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3541,
                          "src": "2857:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3554,
                        "name": "TokenGrant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7450,
                        "src": "2846:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TokenGrant_$7450_$",
                          "typeString": "type(contract TokenGrant)"
                        }
                      },
                      "id": 3556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2846:29:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenGrant_$7450",
                        "typeString": "contract TokenGrant"
                      }
                    },
                    "src": "2833:42:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenGrant_$7450",
                      "typeString": "contract TokenGrant"
                    }
                  },
                  "id": 3558,
                  "nodeType": "ExpressionStatement",
                  "src": "2833:42:9"
                }
              ]
            },
            "documentation": "@notice Initializes Keep Bonding contract.\n @param registryAddress Keep registry contract address.\n @param tokenStakingAddress KEEP token staking contract address.\n @param tokenGrantAddress KEEP token grant contract address.",
            "id": 3560,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3544,
                    "name": "registryAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3537,
                    "src": "2748:15:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 3545,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3543,
                  "name": "AbstractBonding",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1742,
                  "src": "2732:15:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_AbstractBonding_$1742_$",
                    "typeString": "type(contract AbstractBonding)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2732:32:9"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3537,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3560,
                  "src": "2623:23:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3536,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2623:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3539,
                  "name": "tokenStakingAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3560,
                  "src": "2656:27:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3538,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2656:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3541,
                  "name": "tokenGrantAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3560,
                  "src": "2693:25:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3540,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2693:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2613:111:9"
            },
            "returnParameters": {
              "id": 3546,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2765:0:9"
            },
            "scope": 3664,
            "src": "2602:280:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3594,
              "nodeType": "Block",
              "src": "3437:332:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 3571,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3568,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16686,
                                "src": "3468:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3569,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3468:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 3570,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3564,
                              "src": "3482:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "3468:22:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 3575,
                                "name": "operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3564,
                                "src": "3545:8:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 3576,
                                "name": "tokenStaking",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3533,
                                "src": "3555:12:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TokenStaking_$9183",
                                  "typeString": "contract TokenStaking"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_contract$_TokenStaking_$9183",
                                  "typeString": "contract TokenStaking"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 3572,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16686,
                                  "src": "3510:3:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3573,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3510:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 3574,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "isTokenOwnerForOperator",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10176,
                              "src": "3510:34:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_contract$_StakeDelegatable_$6183_$returns$_t_bool_$bound_to$_t_address_$",
                                "typeString": "function (address,address,contract StakeDelegatable) view returns (bool)"
                              }
                            },
                            "id": 3577,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3510:58:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3468:100:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3582,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3564,
                              "src": "3620:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 3583,
                              "name": "tokenGrant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3535,
                              "src": "3630:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenGrant_$7450",
                                "typeString": "contract TokenGrant"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_TokenGrant_$7450",
                                "typeString": "contract TokenGrant"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3579,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16686,
                                "src": "3588:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3588:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 3581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isGranteeForOperator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10202,
                            "src": "3588:31:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_contract$_TokenGrant_$7450_$returns$_t_bool_$bound_to$_t_address_$",
                              "typeString": "function (address,address,contract TokenGrant) view returns (bool)"
                            }
                          },
                          "id": 3584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3588:53:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3468:173:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c79206f70657261746f72206f7220746865206f776e657220697320616c6c6f77656420746f20776974686472617720626f6e64",
                        "id": 3586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3655:56:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d15dcb475e924008ca1aa25332521b0739d197945caa22d587e3888c5b259d78",
                          "typeString": "literal_string \"Only operator or the owner is allowed to withdraw bond\""
                        },
                        "value": "Only operator or the owner is allowed to withdraw bond"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d15dcb475e924008ca1aa25332521b0739d197945caa22d587e3888c5b259d78",
                          "typeString": "literal_string \"Only operator or the owner is allowed to withdraw bond\""
                        }
                      ],
                      "id": 3567,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16689,
                        16690
                      ],
                      "referencedDeclaration": 16690,
                      "src": "3447:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3447:274:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3588,
                  "nodeType": "ExpressionStatement",
                  "src": "3447:274:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3590,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3562,
                        "src": "3745:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3591,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3564,
                        "src": "3753:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3589,
                      "name": "withdrawBond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1741,
                      "src": "3732:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 3592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3732:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3593,
                  "nodeType": "ExpressionStatement",
                  "src": "3732:30:9"
                }
              ]
            },
            "documentation": "@notice Withdraws amount from operator's value available for bonding.\n Should not be used by grantee of managed grants. For this case,\n please use `withdrawAsManagedGrantee`.\n\n    /// This function can be called only by:\n - operator,\n - liquid, staked tokens owner (not a grant),\n - direct staked tokens grantee (not a managed grant).\n\n    /// @param amount Value to withdraw in wei.\n @param operator Address of the operator.",
            "id": 3595,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3562,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3595,
                  "src": "3396:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3561,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3396:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3564,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 3595,
                  "src": "3412:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3563,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3412:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3395:34:9"
            },
            "returnParameters": {
              "id": 3566,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3437:0:9"
            },
            "scope": 3664,
            "src": "3378:391:9",
            "stateMutability": "nonpayable",
            "superFunction": 1242,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3620,
              "nodeType": "Block",
              "src": "4205:281:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3608,
                            "name": "operator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3599,
                            "src": "4292:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 3609,
                            "name": "managedGrant",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3601,
                            "src": "4318:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 3610,
                            "name": "tokenGrant",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3535,
                            "src": "4348:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenGrant_$7450",
                              "typeString": "contract TokenGrant"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_contract$_TokenGrant_$7450",
                              "typeString": "contract TokenGrant"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3605,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16686,
                              "src": "4236:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3606,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4236:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 3607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isManagedGranteeForOperator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10241,
                          "src": "4236:38:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_contract$_TokenGrant_$7450_$returns$_t_bool_$bound_to$_t_address_$",
                            "typeString": "function (address,address,address,contract TokenGrant) view returns (bool)"
                          }
                        },
                        "id": 3611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4236:136:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c79206772616e74656520697320616c6c6f77656420746f20776974686472617720626f6e64",
                        "id": 3612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4386:42:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aee72b5a6c371bd1ef4cafc8bfb5ce01243beae15242cff9707752849fce500e",
                          "typeString": "literal_string \"Only grantee is allowed to withdraw bond\""
                        },
                        "value": "Only grantee is allowed to withdraw bond"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aee72b5a6c371bd1ef4cafc8bfb5ce01243beae15242cff9707752849fce500e",
                          "typeString": "literal_string \"Only grantee is allowed to withdraw bond\""
                        }
                      ],
                      "id": 3604,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16689,
                        16690
                      ],
                      "referencedDeclaration": 16690,
                      "src": "4215:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4215:223:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3614,
                  "nodeType": "ExpressionStatement",
                  "src": "4215:223:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3616,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3597,
                        "src": "4462:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3617,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3599,
                        "src": "4470:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3615,
                      "name": "withdrawBond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1741,
                      "src": "4449:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 3618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4449:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3619,
                  "nodeType": "ExpressionStatement",
                  "src": "4449:30:9"
                }
              ]
            },
            "documentation": "@notice Withdraws amount from operator's value available for bonding.\n Can be called only by staked tokens managed grantee.\n @param amount Value to withdraw in wei.\n @param operator Address of the operator.\n @param managedGrant Address of the managed grant contract.",
            "id": 3621,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawAsManagedGrantee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3597,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3621,
                  "src": "4121:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3596,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4121:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3599,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 3621,
                  "src": "4145:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3598,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4145:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3601,
                  "name": "managedGrant",
                  "nodeType": "VariableDeclaration",
                  "scope": 3621,
                  "src": "4171:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3600,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4171:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4111:86:9"
            },
            "returnParameters": {
              "id": 3603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4205:0:9"
            },
            "scope": 3664,
            "src": "4078:408:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3636,
              "nodeType": "Block",
              "src": "4620:102:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3632,
                        "name": "_operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3623,
                        "src": "4686:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3633,
                        "name": "_operatorContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3625,
                        "src": "4697:17:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3630,
                        "name": "tokenStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3533,
                        "src": "4649:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenStaking_$9183",
                          "typeString": "contract TokenStaking"
                        }
                      },
                      "id": 3631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isAuthorizedForOperator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5062,
                      "src": "4649:36:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address,address) view external returns (bool)"
                      }
                    },
                    "id": 3634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4649:66:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3629,
                  "id": 3635,
                  "nodeType": "Return",
                  "src": "4630:85:9"
                }
              ]
            },
            "documentation": null,
            "id": 3637,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAuthorizedForOperator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3623,
                  "name": "_operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 3637,
                  "src": "4534:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3622,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4534:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3625,
                  "name": "_operatorContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 3637,
                  "src": "4561:25:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3624,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4561:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4524:68:9"
            },
            "returnParameters": {
              "id": 3629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3628,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3637,
                  "src": "4614:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3627,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4614:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4613:6:9"
            },
            "scope": 3664,
            "src": "4492:230:9",
            "stateMutability": "view",
            "superFunction": 1672,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3649,
              "nodeType": "Block",
              "src": "4799:60:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3646,
                        "name": "_operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3639,
                        "src": "4842:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3644,
                        "name": "tokenStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3533,
                        "src": "4816:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenStaking_$9183",
                          "typeString": "contract TokenStaking"
                        }
                      },
                      "id": 3645,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "authorizerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6182,
                      "src": "4816:25:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view external returns (address)"
                      }
                    },
                    "id": 3647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4816:36:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3643,
                  "id": 3648,
                  "nodeType": "Return",
                  "src": "4809:43:9"
                }
              ]
            },
            "documentation": null,
            "id": 3650,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "authorizerOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3639,
                  "name": "_operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 3650,
                  "src": "4750:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3638,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4750:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4749:19:9"
            },
            "returnParameters": {
              "id": 3643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3642,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3650,
                  "src": "4790:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3641,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4790:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4789:9:9"
            },
            "scope": 3664,
            "src": "4728:131:9",
            "stateMutability": "view",
            "superFunction": 1679,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3662,
              "nodeType": "Block",
              "src": "4973:61:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3659,
                        "name": "_operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3652,
                        "src": "5017:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3657,
                        "name": "tokenStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3533,
                        "src": "4990:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenStaking_$9183",
                          "typeString": "contract TokenStaking"
                        }
                      },
                      "id": 3658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beneficiaryOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6169,
                      "src": "4990:26:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_payable_$",
                        "typeString": "function (address) view external returns (address payable)"
                      }
                    },
                    "id": 3660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4990:37:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 3656,
                  "id": 3661,
                  "nodeType": "Return",
                  "src": "4983:44:9"
                }
              ]
            },
            "documentation": null,
            "id": 3663,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beneficiaryOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3652,
                  "name": "_operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 3663,
                  "src": "4888:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3651,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4888:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4887:19:9"
            },
            "returnParameters": {
              "id": 3656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3655,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3663,
                  "src": "4952:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3654,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4952:15:9",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4951:17:9"
            },
            "scope": 3664,
            "src": "4865:169:9",
            "stateMutability": "view",
            "superFunction": 1686,
            "visibility": "public"
          }
        ],
        "scope": 3665,
        "src": "2110:2926:9"
      }
    ],
    "src": "1837:3200:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0xa5543d8e139d9ab4342d5c4f6ec1bff5a97f9a52d71f7ffe9845b94f1449fc91": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "holder",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sortitionPool",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "referenceID",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "BondCreated",
          "type": "event",
          "signature": "0xa5543d8e139d9ab4342d5c4f6ec1bff5a97f9a52d71f7ffe9845b94f1449fc91"
        },
        "0xb1d917176802bfbc813f2d82e745526029a4ccf0ea98d14e7a09a08703595b1e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "referenceID",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "newHolder",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newReferenceID",
              "type": "uint256"
            }
          ],
          "name": "BondReassigned",
          "type": "event",
          "signature": "0xb1d917176802bfbc813f2d82e745526029a4ccf0ea98d14e7a09a08703595b1e"
        },
        "0x60b8ef4216791426b3d7acfb0b6d11a400872350afd70a3ce5ebf62bea7cb0d4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "referenceID",
              "type": "uint256"
            }
          ],
          "name": "BondReleased",
          "type": "event",
          "signature": "0x60b8ef4216791426b3d7acfb0b6d11a400872350afd70a3ce5ebf62bea7cb0d4"
        },
        "0xf8e947b47b515d01aa96426822ddcf23a08f42d8c2dbfd65e674ba824f551382": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "referenceID",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "destination",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "BondSeized",
          "type": "event",
          "signature": "0xf8e947b47b515d01aa96426822ddcf23a08f42d8c2dbfd65e674ba824f551382"
        },
        "0xfd586a32ad24d585b1f7b36ee48e66304ad7627b48b39a0ab1d8a3e84741ea2a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "beneficiary",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "UnbondedValueDeposited",
          "type": "event",
          "signature": "0xfd586a32ad24d585b1f7b36ee48e66304ad7627b48b39a0ab1d8a3e84741ea2a"
        },
        "0x5ebf1d16423ab39117c0ca9327215b5bcd423aaf7042044c87248a4423d252d9": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "beneficiary",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "UnbondedValueWithdrawn",
          "type": "event",
          "signature": "0x5ebf1d16423ab39117c0ca9327215b5bcd423aaf7042044c87248a4423d252d9"
        }
      },
      "links": {},
      "address": "0x60535A59B4e71F908f3fEB0116F450703FB35eD8",
      "transactionHash": "0x7dec3ea90c5b1a3c492d637a6f752ff8906c853bea0908ad53fe814df13b2a3e"
    }
  },
  "schemaVersion": "3.0.22",
  "updatedAt": "2020-08-31T14:22:26.030Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "authorizeSortitionPoolContract(address,address)": {
        "details": "Only operator's authorizer can call this function."
      },
      "availableUnbondedValue(address,address,address)": {
        "details": "Implements function expected by sortition pools' IBonding interface.",
        "params": {
          "authorizedSortitionPool": "Address of authorized sortition pool.",
          "bondCreator": "Address authorized to create a bond.",
          "operator": "Address of the operator."
        },
        "return": "Amount of authorized wei deposit available for bonding."
      },
      "bondAmount(address,address,uint256)": {
        "params": {
          "holder": "Address of the holder of the bond.",
          "operator": "Address of the operator.",
          "referenceID": "Reference ID of the bond."
        },
        "return": "Amount of wei in the selected bond."
      },
      "constructor": {
        "params": {
          "registryAddress": "Keep registry contract address.",
          "tokenGrantAddress": "KEEP token grant contract address.",
          "tokenStakingAddress": "KEEP token staking contract address."
        }
      },
      "createBond(address,address,uint256,uint256,address)": {
        "details": "Function can be executed only by authorized contract. Reference ID should be unique for holder and operator.",
        "params": {
          "amount": "Value to bond in wei.",
          "authorizedSortitionPool": "Address of authorized sortition pool.",
          "holder": "Address of the holder of the bond.",
          "operator": "Address of the operator to bond.",
          "referenceID": "Reference ID used to track the bond by holder."
        }
      },
      "deauthorizeSortitionPoolContract(address,address)": {
        "details": "Only operator's authorizer can call this function."
      },
      "deposit(address)": {
        "params": {
          "operator": "Address of the operator."
        }
      },
      "freeBond(address,uint256)": {
        "details": "Function requires that caller is the holder of the bond which is being released.",
        "params": {
          "operator": "Address of the bonded operator.",
          "referenceID": "Reference ID of the bond."
        }
      },
      "hasSecondaryAuthorization(address,address)": {
        "details": "See authorizeSortitionPoolContract."
      },
      "reassignBond(address,uint256,address,uint256)": {
        "details": "Function requires that a caller is the current holder of the bond which is being reassigned.",
        "params": {
          "newHolder": "Address of the new holder of the bond.",
          "newReferenceID": "New reference ID to register the bond.",
          "operator": "Address of the bonded operator.",
          "referenceID": "Reference ID of the bond."
        }
      },
      "seizeBond(address,uint256,uint256,address)": {
        "details": "Function requires that a caller is the holder of the bond which is being seized.",
        "params": {
          "amount": "Amount to be seized.",
          "destination": "Address to send the amount to.",
          "operator": "Address of the bonded operator.",
          "referenceID": "Reference ID of the bond."
        }
      },
      "withdraw(uint256,address)": {
        "params": {
          "amount": "Value to withdraw in wei.",
          "operator": "Address of the operator."
        }
      },
      "withdrawAsManagedGrantee(uint256,address,address)": {
        "params": {
          "amount": "Value to withdraw in wei.",
          "managedGrant": "Address of the managed grant contract.",
          "operator": "Address of the operator."
        }
      }
    },
    "title": "Keep Bonding"
  },
  "userdoc": {
    "methods": {
      "authorizeSortitionPoolContract(address,address)": {
        "notice": "Authorizes sortition pool for the provided operator. Operator's authorizers need to authorize individual sortition pools per application since they may be interested in participating only in a subset of keep types used by the given application."
      },
      "availableUnbondedValue(address,address,address)": {
        "notice": "Returns the amount of wei the operator has made available for bonding and that is still unbounded. If the operator doesn't exist or bond creator is not authorized as an operator contract or it is not authorized by the operator or there is no secondary authorization for the provided sortition pool, function returns 0."
      },
      "bondAmount(address,address,uint256)": {
        "notice": "Returns value of wei bonded for the operator."
      },
      "constructor": "Initializes Keep Bonding contract.",
      "createBond(address,address,uint256,uint256,address)": {
        "notice": "Create bond for the given operator, holder, reference and amount."
      },
      "deauthorizeSortitionPoolContract(address,address)": {
        "notice": "Deauthorizes sortition pool for the provided operator. Authorizer may deauthorize individual sortition pool in case the operator should no longer be eligible for work selection and the application represented by the sortition pool should no longer be eligible to create bonds for the operator."
      },
      "deposit(address)": {
        "notice": "Add the provided value to operator's pool available for bonding."
      },
      "freeBond(address,uint256)": {
        "notice": "Releases the bond and moves the bond value to the operator's unbounded value pool."
      },
      "hasSecondaryAuthorization(address,address)": {
        "notice": "Checks if the sortition pool has been authorized for the provided operator by its authorizer."
      },
      "reassignBond(address,uint256,address,uint256)": {
        "notice": "Reassigns a bond to a new holder under a new reference."
      },
      "seizeBond(address,uint256,uint256,address)": {
        "notice": "Seizes the bond by moving some or all of the locked bond to the provided destination address."
      },
      "withdraw(uint256,address)": {
        "notice": "Withdraws amount from operator's value available for bonding. Should not be used by grantee of managed grants. For this case, please use `withdrawAsManagedGrantee`.     /// This function can be called only by: - operator, - liquid, staked tokens owner (not a grant), - direct staked tokens grantee (not a managed grant). "
      },
      "withdrawAsManagedGrantee(uint256,address,address)": {
        "notice": "Withdraws amount from operator's value available for bonding. Can be called only by staked tokens managed grantee."
      }
    },
    "notice": "Contract holding deposits from keeps' operators."
  }
}